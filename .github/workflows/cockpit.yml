name: Simple 3 Jobs Workflow

on:
  workflow_dispatch:
  pull_request:

jobs:
  run_tf:
    name: Run terraform and deploy infrastructure on hcloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: List files in repo
        run: ls -la

  conf_workstation:
    name: Run ansible and configure target system
    needs: run_tf  
    runs-on: ubuntu-latest
    steps:
      - name: Show OS details
        run: uname -a

      - name: Show CPU info
        run: lscpu

  conf_test:
    name: Run ansible and configure target systems
    needs: run_tf 
    runs-on: ubuntu-latest
    steps:
      - name: Check disk usage
        run: df -h

      - name: Show current date/time
        run: date

  example_matrix:
    name: Run Ansible and Configure Target Systems
    needs: run_tf 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [conf_workstation, conf_test, conf_prod]
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Run Ansible for ${{ matrix.version }}
        run: |
          echo "Running Ansible playbook for: ${{ matrix.version }}"

  read-config:
    name: Read systems list
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install yq
        run: |
          sudo apt-get update && sudo apt-get install -y yq

      - name: Read systems list from config.yml
        id: set-matrix
        run: |
          systems=$(yq '.systems' config.yml | jq -R -s -c 'split("\n") | map(select(. != ""))')
          echo "matrix=$systems" >> $GITHUB_OUTPUT

  example_matrix1:
    name: Run Ansible on each system
    needs: read-config
    runs-on: ubuntu-latest
    strategy:
      matrix:
        system: ${{ fromJson(needs.read-config.outputs.matrix) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Ansible for ${{ matrix.system }}
        run: |
          echo "Running Ansible playbook for: ${{ matrix.system }}"


